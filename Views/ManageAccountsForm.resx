<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>